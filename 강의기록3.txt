섹션8 수업

restful-web-services
	Spring Web
	Spring Data JPA
	H2 Database
	Spring Boot DevTools
	
1. Spring MVC 구동 순서(위에서 아래순).
	DispatcherServlet - Front Controller Patttern
		Auto Configuration(DispatcherServletAutoConfiguration) 으로 자동으로 설정
		이로 인해 요청한 Url Path를 Search.
	Url Path Method를 실행
	
2. Request Method for REST API
	GET - 사용자가 게시물의 상세정보를 얻고 싶을 때 Get 요청 메소드를 사용한다.
	POST - 새 리소스를 만들고자 할 때 사용한다. 기존 리소스를 생성할 때, 즉, 게시물을 만들 때 사용한다.
	PUT - 기존 리소스를 수정할 때, 게시물을 업데이트할 때 사용한다.
		PATCH - 기존 리소스 중 일부만 수정할 때 사용한다.
	DELETE - 기존 리소스를 삭제할 때, 게시물을 삭제할 때 사용한다.
	
	Users REST API
		Retrieve all Users
			GET /users
		create a User
			POST /users
		Retrieve One User
			GET /users/{id}
		Delete a User
			DELETE /users/{id}
			
		Posts REST API
			Retrieve All Posts for a User
				GET /users/{id}/posts
			Create a post for a user
				POST /users/{id}/posts
			Retrieve Details of a post
				GET /users/{id}/posts/{post_id}

3. 웹브라우저에선 POST 방식을 테스트를 해볼 수 없다.
	하지만 Talend API Tester 는 http와 REST API를 쉽게 호출하고 파악하고 테스트해볼 수 있다.
	https://chromewebstore.google.com/detail/talend-api-tester-free-ed/aejoelaoggembcahagimdiliamlcdmfm
	크롬에서 확장자 추가한다
	그리고 실행한다.
	POST 방식으로 전송 시,
	{
	  "name": "linda",
	  "birthdate": "2003-12-20"
	}
	식의 json으로 테스트한다.
	
4. 아래 ResponseEntity 적용 시, 응답 상태가 바뀌게할 수 있다.

5. 404등 Exception 시, spring-boot-devtools 가 적용되어 있다면
	불필요 로직까지 나타나기에,
	운영으로 전환할 때는, pom.xml 에서 spring-boot-devtools 를 주석처리하거나 삭제한다.
	
6. ResponseEntityExceptionhandler 클래스는 Spring MVC가 발생시키는 모든 예외를 처리한다.

7. API 유효성 검사하기 위해선 starter-validation 이란걸 디펜던시 해줘야한다.
	<dependency>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-validation</artifactId>
	</dependency>
	
	이후, 컨트롤러에서 파라메터에 @Valid 입력하면
	바인딩이 수행될 때 객체에 정의된 유효성(validation) 검증이 자동으로 수행이 된다.
	
